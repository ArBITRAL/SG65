component Cust
	  attributes: cid, loc, day, price, dist, stype, favh, ref, send
	  observables: cid, favh
	  behaviour:
	  	let {
		    F := <send = tt>('acms',this.cid,this.loc,this.day,this.price)@(stype = 'Broker').[send := ff]F

	    A := (x = 'offer'and this.price >= p and (this.loc - l <= this.dist or this.loc - l <= this.dist))(x,h,l,p,b).
	      	 [price := p, favh := h, ref := b]A
		 +
	         (x = 'finish')(x).B

	    B := <favh /= 'undef'>('book',this.cid,this.day,this.ref)@(hid = this.favh).
		 ( (x = 'confirm')(x).nil
		   +
		   (x = 'toolate')(x).[send := tt]A
		 )
		 +
		 <favh = 'undef'>()@(false).[send := tt]A
	}
	init
	    F | A

end


component Broker
	  attributes: bid, stype, nh, counter, nh
	  observables: bid
	  behaviour:
	let {

	    P := (x = 'acms')(x,c,l,d,p).[counter[c] := 0](F | P)
	    F := ('acms',c,d,this.bid)@(stype = 'Hotel' and locality = l).(A | U)

	    A := <counter[c] < nh[l]>(x = 'offer' and cust = c and op <= p)(x,cust,h,l,op).(S | A)

	    S := ('offer',h,l,op,this.bid)@(cid = c).[counter[c] := counter[c] + 1]nil

	    U := <counter[c] < nh[l]>(x = 'offer' and op > p)(x,cust,h,l,op).[counter[c] := counter[c] + 1]U
	        + <counter[c] < nh[l]>(x = 'nooffer' and cust = c)(x,cust).[counter[c] := counter[c] + 1]U
		+ <counter[c] = nh[l]>('finish')@(cid = c).nil
	}
	init
	    P
end

component Hotel
	   attributes: hid, stype, locality, room, price
	   observables: hid
	   behaviour:
	let {
	    P := (x = 'acms')(x,c,d,b).(H | P)
	    H := <room[d] > 0>('offer',c,this.hid,this.locality,this.price[d][b])@(bid = b).nil
	      +
	        <room[d] <= 0>('nooffer',c)@(bid = b).nil

           B :=  (x = 'book')(x,c,d,ref).(C | B)

	   C := <room[d] > 0>('confirm')@(cid = c).[room[d] := room[d] - 1]nil
	      +
		<room[d] = 0>('toolate')@(cid = c).nil
	}
	init
		P | B

end


Cust1 : Cust(cid -> 1, loc -> 1, day -> 5, price -> 500, favh -> 'undef', counter -> 0, total -> 0, send -> tt, stype -> 'Cust')

Cust2 : Cust(cid -> 2, loc -> 1, day -> 5, price -> 500, favh -> 'undef', counter -> 0, total -> 0, send -> tt, stype -> 'Cust')

B1 : Broker(bid -> 1, stype -> 'Broker',  nh -> [0,2,1])

H1 : Hotel(hid -> 1, stype -> 'Hotel', locality -> 1, room -> [5,1,1,1,1,1], price -> [[0,400,500],[0,400,500],[0,400,500],[0,400,500],[0,400,500],[0,400,500]])
H2 : Hotel(hid -> 2, stype -> 'Hotel', locality -> 1, room -> [5,1,1,1,1,0], price -> [[0,400,500],[0,400,500],[0,400,500],[0,400,500],[0,400,500],[0,400,500]])
H3 : Hotel(hid -> 3, stype -> 'Hotel', locality -> 2, room -> [5,1,1,1,1,1], price -> [[0,400,500],[0,400,500],[0,400,500],[0,400,500],[0,400,500],[0,400,500]])


%% AF (FINAL and not has_favh(Cust1,undef)) --> false
%% AF (FINAL and not (has_favh(Cust1,undef) and has_favh(Cust2,undef))) --> true